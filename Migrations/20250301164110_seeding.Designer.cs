// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestApiLabb.Data;

#nullable disable

namespace RestApiLabb.Migrations
{
    [DbContext(typeof(RestApiLabbDbContext))]
    [Migration("20250301164110_seeding")]
    partial class seeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestApiLabb.Models.Education", b =>
                {
                    b.Property<int>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EducationId"));

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("PersonId_FK")
                        .HasColumnType("int");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("EducationId");

                    b.HasIndex("PersonId_FK");

                    b.ToTable("Educations");

                    b.HasData(
                        new
                        {
                            EducationId = 1,
                            Degree = "Full-stack web-dev, backend focus, APIs & services",
                            PersonId_FK = 1,
                            School = "Chas Academy",
                            StartDate = new DateOnly(2024, 9, 2)
                        },
                        new
                        {
                            EducationId = 2,
                            Degree = "1-year acting program, stage skills & performance",
                            EndDate = new DateOnly(2023, 6, 9),
                            PersonId_FK = 1,
                            School = "Sundsgården",
                            StartDate = new DateOnly(2022, 8, 22)
                        });
                });

            modelBuilder.Entity("RestApiLabb.Models.Experience", b =>
                {
                    b.Property<int>("ExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExperienceId"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateOnly?>("EndYear")
                        .HasColumnType("date");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PersonId_FK")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartYear")
                        .HasColumnType("date");

                    b.HasKey("ExperienceId");

                    b.HasIndex("PersonId_FK");

                    b.ToTable("Experiences");

                    b.HasData(
                        new
                        {
                            ExperienceId = 1,
                            Company = "Simon Eke Consulting",
                            Description = "Worked on developing a website for a café",
                            JobTitle = "Website developer",
                            PersonId_FK = 1,
                            StartYear = new DateOnly(2025, 1, 23)
                        },
                        new
                        {
                            ExperienceId = 2,
                            Company = "Life, the Universe and Everything",
                            Description = "Self-development. Rode the roller-coaster of Life",
                            JobTitle = "Learner",
                            PersonId_FK = 1,
                            StartYear = new DateOnly(1998, 4, 29)
                        },
                        new
                        {
                            ExperienceId = 3,
                            Company = "Big Tech",
                            Description = "Manifesting that I'll be doing databases, APIs",
                            EndYear = new DateOnly(2025, 1, 1),
                            JobTitle = "Backend-developer",
                            PersonId_FK = 1,
                            StartYear = new DateOnly(2024, 12, 31)
                        });
                });

            modelBuilder.Entity("RestApiLabb.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            Description = "A future fullstack developer within the .NET. family of languages and practises. OOP, Agile, C#, EF Core, API, T-SQL, Database, Azure, React.",
                            Email = "simon3eke@gmail.com",
                            FullName = "Simon Eke",
                            MobileNumber = "+46705516182"
                        });
                });

            modelBuilder.Entity("RestApiLabb.Models.Education", b =>
                {
                    b.HasOne("RestApiLabb.Models.Person", "Person")
                        .WithMany("Educations")
                        .HasForeignKey("PersonId_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("RestApiLabb.Models.Experience", b =>
                {
                    b.HasOne("RestApiLabb.Models.Person", "Person")
                        .WithMany("Experiences")
                        .HasForeignKey("PersonId_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("RestApiLabb.Models.Person", b =>
                {
                    b.Navigation("Educations");

                    b.Navigation("Experiences");
                });
#pragma warning restore 612, 618
        }
    }
}
